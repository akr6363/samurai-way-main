{"version":3,"file":"static/js/544.363b4789.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.scss?d037","webpack://samurai-way/./src/components/Dialogs/Message/Message.module.scss?a735","components/Dialogs/Message/Message.tsx","webpack://samurai-way/./src/components/Dialogs/SendMessageForm.module.scss?52d9","components/Dialogs/SendMessageForm.tsx","webpack://samurai-way/./src/components/Dialogs/navDialogs/navDialogsItem/NavDialogsItem.module.scss?0160","components/Dialogs/navDialogs/navDialogsItem/NavDialogsItem.tsx","webpack://samurai-way/./src/components/Dialogs/navDialogs/NavDialogs.module.scss?5b99","components/Dialogs/navDialogs/NavDialogs.tsx","components/Dialogs/navDialogs/NavDialogsContainer.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","../node_modules/@mui/icons-material/ArrowRightAlt.js","../node_modules/@mui/icons-material/Send.js","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsPage\":\"Dialogs_dialogsPage__MA3aH\",\"dialogsPage__empty\":\"Dialogs_dialogsPage__empty__Nt0u-\",\"page__dialogs\":\"Dialogs_page__dialogs__5rJJz\",\"page__messages\":\"Dialogs_page__messages__QojjJ\",\"messagesContainer\":\"Dialogs_messagesContainer__aEmF6\",\"dialogsPage__info\":\"Dialogs_dialogsPage__info__Toyfv\",\"toProfileBtn\":\"Dialogs_toProfileBtn__NL4RZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__vhqPg\",\"message__my\":\"Message_message__my__bAN70\",\"photo\":\"Message_photo__p-3On\",\"photo__my\":\"Message_photo__my__UfDr2\",\"photo__friend\":\"Message_photo__friend__DSx5U\",\"text\":\"Message_text__VbalH\",\"name\":\"Message_name__rX27U\"};","import React from \"react\";\r\nimport styles from \"./Message.module.scss\";\r\nimport {DialogsType} from \"../../../redux/dialogs-reducer\";\r\nimport {MyDataType} from \"../../../redux/auth-reducer\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: string\r\n    isMy: boolean\r\n    user?: DialogsType\r\n    myData: MyDataType\r\n}\r\n\r\n\r\nexport const Message: React.FC<MessagePropsType> = ({id, message, isMy, user, myData}) => {\r\n    return (\r\n        // <div className={`${styles.message}\r\n        // ${isMy ? styles.message__my : styles.message__friend}`}>\r\n        <div className={cn(styles.message, {\r\n            [styles.message__my]: isMy,\r\n            [styles.message__friend]: !isMy,\r\n        })}>\r\n            <div className={`${styles.photo}\r\n                 ${isMy ? styles.photo__my : styles.photo__friend}`}>\r\n                <img src={isMy ? myData.photo : user?.photo} alt=\"\"/>\r\n            </div>\r\n            <div className={styles.text}>\r\n                <div className={`${styles.name}\r\n                 ${isMy ? styles.name__my : styles.name__friend}`}>{isMy ? myData.name : user?.name}</div>\r\n                <div>{message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"messageForm\":\"SendMessageForm_messageForm__2fh7M\",\"postButton\":\"SendMessageForm_postButton__FwDxh\",\"postButton__icon\":\"SendMessageForm_postButton__icon__XO8T1\",\"send__btn\":\"SendMessageForm_send__btn__BoVq4\"};","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport styles from \"./SendMessageForm.module.scss\";\r\nimport {maxLengthCreator} from \"../../utils/validators/validators\";\r\nimport {renderTextarea} from \"../common/renderTextField\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst SendMessageForm: React.FC<InjectedFormProps<SendMessageFormDataType>> = (props) => {\r\n    const {handleSubmit} = props\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.messageForm}>\r\n            <Field label={'Write a message...'}\r\n                   name={'message'} component={renderTextarea} className={styles.send__input}/>\r\n            <IconButton aria-label=\"send\" size=\"large\"  type='submit' className={styles.postButton} >\r\n                <SendIcon fontSize=\"inherit\" className={styles.postButton__icon}/>\r\n            </IconButton>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const SendMessageReduxForm = reduxForm<SendMessageFormDataType>({\r\n    form: 'send-message'\r\n})(SendMessageForm)\r\n\r\nexport type SendMessageFormDataType = {\r\n    message: string\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"friendContainer\":\"NavDialogsItem_friendContainer__9J5J0\",\"photo\":\"NavDialogsItem_photo__jjbvK\",\"name\":\"NavDialogsItem_name__AAqFp\"};","import React from 'react';\r\nimport styles from './NavDialogsItem.module.scss'\r\nimport {hrHR} from \"@mui/material/locale\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype FriendPropsType = {\r\n    id: number\r\n    name?: string\r\n    photo?: string\r\n}\r\n\r\nconst NavDialogsItem: React.FC<FriendPropsType> = (props) => {\r\n    return (\r\n            <div className={styles.friendContainer}>\r\n                <div className={styles.photo}>\r\n                    <img src={props.photo} alt=\"\"/>\r\n                </div>\r\n                <div className={styles.name}>{props.name}</div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default NavDialogsItem;","// extracted by mini-css-extract-plugin\nexport default {\"friendNavBar\":\"NavDialogs_friendNavBar__W2koi\",\"friendNavBar__title\":\"NavDialogs_friendNavBar__title__zZ8Un\",\"nav__friends\":\"NavDialogs_nav__friends__WxyTt\",\"friendLInk\":\"NavDialogs_friendLInk__7EP0b\"};","import React from 'react';\r\nimport NavDialogsItem from \"./navDialogsItem/NavDialogsItem\";\r\nimport styles from './NavDialogs.module.scss'\r\nimport {friendsType} from \"../../../redux/sidebar-reducer\";\r\nimport {DialogsType} from \"../../../redux/dialogs-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype FriendsNavBarPropsType = {\r\n    friends: DialogsType[]\r\n}\r\n\r\nexport const NavDialogs: React.FC<FriendsNavBarPropsType> = ({friends}) => {\r\n\r\n    const friendsList = friends.map(friend => {\r\n        return (\r\n            <NavLink to={`/dialogs/${friend.id}`} className={styles.friendLInk} key={friend.id}>\r\n                <NavDialogsItem id={friend.id}  name={friend.name} photo={friend.photo}/>\r\n            </NavLink>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className={styles.friendNavBar}>\r\n            <h2 className={styles.friendNavBar__title}>Dialogs</h2>\r\n            <div className={styles.nav__friends}>\r\n                {friendsList}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavDialogs;\r\n\r\n","import React from 'react';\r\nimport {Dispatch} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionsTypes, AppStateType} from \"../../../redux/redux-store\";\r\nimport NavDialogs from \"./NavDialogs\";\r\nimport {DialogsType, requestDialogs} from \"../../../redux/dialogs-reducer\";\r\n\r\n\r\ntype MapStateReturnType = {\r\n    friends: DialogsType[]\r\n}\r\n\r\ntype mapDispatchReturnType = {\r\n    requestDialogs(currentPage: number, pageSize: number, friend?: boolean, term?: string): void\r\n}\r\n\r\nexport type FriendsNavBarPropsType = MapStateReturnType & mapDispatchReturnType\r\n\r\nclass NavDialogsContainer extends React.Component<FriendsNavBarPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestDialogs(1, 100, true)\r\n    }\r\n\r\n    render () {\r\n        return <NavDialogs {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateReturnType => {\r\n    return {\r\n        friends: state.dialogsPage.dialogsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionsTypes>): mapDispatchReturnType => {\r\n    return {\r\n        requestDialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavDialogsContainer)","import React, {useEffect, useRef} from 'react';\r\nimport styles from './Dialogs.module.scss'\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsContainerPropsType} from \"./DialogsContainer\";\r\nimport {SendMessageFormDataType, SendMessageReduxForm} from \"./SendMessageForm\";\r\nimport {reset} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\nimport {MessageType, sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport NavDialogsContainer from \"./navDialogs/NavDialogsContainer\";\r\nimport NavDialogsItem from \"./navDialogs/navDialogsItem/NavDialogsItem\";\r\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\r\nimport Button from \"@mui/material/Button\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\ntype DialogsPropsType = DialogsContainerPropsType & {\r\n    userId: number\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = ({dialogsPage, sendMessageAC, userId, myData, isFetching}) => {\r\n\r\n    const messagesContainerRef = useRef<HTMLDivElement>(null); // ссылка на элемент messagesContainer\r\n\r\n    useEffect(() => {\r\n        if (messagesContainerRef.current) {\r\n            messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight\r\n        }\r\n    }, [dialogsPage.messageData[userId]]);\r\n\r\n\r\n    let messagesElements: JSX.Element[] = []\r\n    const dialog = dialogsPage.messageData[userId]\r\n    const user = dialogsPage.dialogsData.find(d => d.id === userId)\r\n    if (dialog) {\r\n        messagesElements = dialog\r\n            .map(message => <Message\r\n                id={message.id}\r\n                key={message.id}\r\n                message={message.message}\r\n                isMy={message.isMy}\r\n                user={user}\r\n                myData={myData}\r\n            />)\r\n    }\r\n\r\n    const onSubmit = (formData: SendMessageFormDataType, dispatch: Dispatch) => {\r\n        sendMessageAC(formData.message, userId)\r\n        dispatch(reset('send-message'));\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', maxWidth: '100%'}}>\r\n            {isFetching\r\n\r\n                ? <div className={'page'} style={{flex: '1 1 auto', marginRight: '20px'}}><Preloader/></div>\r\n            : <div className={styles.dialogsPage}>\r\n\r\n                    {\r\n                        dialog\r\n                            ? <div className={styles.page__messages}>\r\n                                <div className={styles.dialogsPage__info}>\r\n                                    <NavDialogsItem id={userId} photo={user?.photo} name={user?.name}/>\r\n                                    <NavLink to={`/profile/${userId}`} className={styles.friendLInk}>\r\n                                        <Button className={styles.toProfileBtn}\r\n                                                onClick={() => {\r\n                                                }}\r\n                                                endIcon={<ArrowRightAltIcon/>}>\r\n                                            Go to profile</Button>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className={styles.messagesContainer} ref={messagesContainerRef}>\r\n                                    {messagesElements}\r\n                                </div>\r\n                                <SendMessageReduxForm onSubmit={onSubmit}/>\r\n                            </div>\r\n                            : <div className={styles.dialogsPage__empty}>Select a dialog...</div>\r\n                    }\r\n                </div>}\r\n\r\n            <NavDialogsContainer/>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStateToPropsReturnType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsReturnType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStateToPropsReturnType) => {\r\n        let {isAuth, ...restProps} = props\r\n        return isAuth\r\n            ? <Component {...restProps as T}/>\r\n            : <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n};\r\n\r\n\r\n\r\nexport default WithAuthRedirect;","import React from 'react';\r\nimport {dialogsPageType, requestDialogs, sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport WithAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {PathParamsType} from \"../Profile/ProfileContainer\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\nimport {MyDataType} from \"../../redux/auth-reducer\";\r\n\r\ntype MapStateReturnType = {\r\n    dialogsPage: dialogsPageType\r\n    myData: MyDataType\r\n    isFetching: boolean,\r\n}\r\n\r\ntype mapDispatchReturnType = {\r\n    sendMessageAC(message: string, userId: number): void\r\n    requestDialogs(currentPage: number, pageSize: number, friend?: boolean, term?: string): void\r\n}\r\n\r\nexport type DialogsContainerPropsType = MapStateReturnType & mapDispatchReturnType & RouteComponentProps<PathParamsType>\r\n\r\nclass DialogsContainer extends React.Component<DialogsContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestDialogs(1, 100, true)\r\n    }\r\n\r\n    render() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        return <Dialogs {...this.props} userId={userId}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateReturnType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        myData: state.auth.myData,\r\n        isFetching: getIsFetching(state),\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps: mapDispatchReturnType = {\r\n    requestDialogs, sendMessageAC\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(DialogsContainer)","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["Message","id","message","isMy","user","myData","className","cn","styles","src","photo","alt","name","SendMessageReduxForm","maxLengthCreator","reduxForm","form","props","handleSubmit","onSubmit","Field","label","component","renderTextarea","IconButton","size","type","Send","fontSize","friendsList","friends","map","friend","to","NavDialogsContainer","this","requestDialogs","React","connect","state","dialogsPage","dialogsData","dispatch","sendMessageAC","userId","isFetching","messagesContainerRef","useRef","useEffect","current","scrollTop","scrollHeight","messageData","messagesElements","dialog","find","d","style","display","maxWidth","flex","marginRight","Preloader","Button","onClick","endIcon","ArrowRightAlt","ref","formData","reset","mapStateToProps","isAuth","auth","Component","restProps","DialogsContainer","Number","match","params","mapDispatchToProps","compose","WithAuthRedirect","getIsFetching","withRouter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module"],"sourceRoot":""}